// General Guides:

//"""
// CallSite: Place of calling a function
// DefnSite: Place of Defining a function
// Aligning: what operator should scalafmt align words around in multiline isntances of this operator
//           case short     => ...
//           case waylonger => ..
//
// DanglingParentheses: Loner closing parentheses after function definition or calling
// rewrite.rules: Where your actual code should be changed not just formatted
// continuation.indent: Where you should indent your code if you decided to break a line.
//"""

//Defaults
style = defaultWithAlign
indentOperator = spray
maxColumn = 160
danglingParentheses = false

//Alignings
align.tokens = ["extends", "=", "%", "%%", {code = "=>", owner = "Case"}, "<-", {code = ":", owner = "Term.Param"}, "::"]
align.openParenCallSite = false
align.openParenDefnSite = false

//Misc
binPack.literalArgumentLists = false
binPack.parentConstructors = true

//Rewrite to cleaner code
rewrite.rules = [RedundantBraces, RedundantParens, SortModifiers, SortImports, PreferCurlyFors]

//When formatter should kick in
runner.optimizer.forceConfigStyleOnOffset = 120
runner.optimizer.forceConfigStyleMinArgCount = 1

//Indentations, NewLines and Spaces
unindentTopLevelOperators = true

includeCurlyBraceInSelectChains = false
optIn.breakChainOnFirstMethodDot = false
optIn.breaksInsideChains = false


continuationIndent.callSite = 2
continuationIndent.defnSite = 4
continuationIndent.extendSite = 4

spaces.afterKeywordBeforeParen = false

newlines.neverInResultType = false
newlines.neverBeforeJsNative = false
newlines.sometimesBeforeColonInMethodReturnType = true
newlines.penalizeSingleSelectMultiArgList = false
newlines.alwaysBeforeCurlyBraceLambdaParams = false
newlines.alwaysBeforeTopLevelStatements = false
newlines.afterCurlyLambda = never
newlines.afterImplicitKWInVerticalMultiline = false
newlines.beforeImplicitKWInVerticalMultiline = false
newlines.alwaysBeforeElseAfterCurlyIf = false
newlines.alwaysBeforeMultilineDef = true
verticalMultilineAtDefinitionSite = false